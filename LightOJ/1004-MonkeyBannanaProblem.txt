//Problem : http://lightoj.com/volume_showproblem.php?problem=1004

#include <bits/stdc++.h>

using namespace std;

#define sz(x) ((int) (x).size())
#define mp make_pair
#define pb push_back
#define all(v) (v).begin( ), (v).end( )
#define FOR(ii,aa,bb) for(int ii=aa;ii<=bb;ii++)
#define I (1ll << 32)
double pi = 3.1415926536;
const int oo = (int) 1e9;
const long long OO = numeric_limits<long long>::max();

int dx[] = { 0, 1, 0, -1 };
int dy[] = { 1, 0, -1, 0 };

int di[] = {0, 0, 1, -1, 1, -1, 1, -1};
int dj[] = {1, -1, 0, 0, 1, -1, -1, 1};

int f1[] = { 0, 0, 0, 1, 1, 1, -1, -1, -1 };
int f2[] = { -1, 0, 1, -1, 0, 1, -1, 0, 1 };

long long arr[500][50];
long long dp[500][500];

int main() {
ios_base::sync_with_stdio(false);
//cin.tie(NULL);
//cout.tie(NULL);
//cout.setf(ios::fixed);
//freopen("input.txt","r",stdin);
//freopen("output.txt","w",stdout);

int t ;
cin >> t;
int cases = 1;

while(t--){

	int n ;
	cin >> n;
	memset(arr, 0, sizeof arr);
	memset(dp , 0 , sizeof dp);

	for(int i = 0 ; i < n ; i++){
		for(int j = 0 ; j <= i ; j++)
			cin >> arr[i][j];
	}

	for(int i = n , k = n - 1; i <= 2 * n - 1 ; i++ , k --){
		for(int j = 0 ; j < k; j++){
			cin >> arr[i][j];
		}
	}

	dp[0][0] = arr[0][0];

	for(int i = 0 ; i < n - 1; i++){
		for(int j = 0 ; j <= i ; j++){
			dp[i + 1][j] = max(dp[i + 1][j] , arr[i + 1][j] + dp[i][j]);
			dp[i + 1][j + 1] = arr[i + 1][j + 1] + dp[i][j];
		}
	}

	for(int i = n , k = n -1 ; i < 2 * n - 1 ; i++ , k--){
		for(int j = 0 ; j < k ; j++){
			long long mx = max(dp[i - 1][j] , dp[i- 1][j + 1]);
			dp[i][j] = mx + arr[i][j];
		}
	}

	cout << "Case " << cases++ << ": " << dp[2 * n - 2][0] << endl;
}


	return 0;
}

